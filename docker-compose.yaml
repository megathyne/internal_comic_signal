version: "3.7"

services:
  client:
    container_name: client
    build:
      context: ./client
      target: react-build
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - ${CLIENT_SERVER_PORT}:${CLIENT_SERVER_PORT}
    environment:
      PORT: ${CLIENT_SERVER_PORT}
      CHOKIDAR_USEPOLLING: "true"
    command: yarn start
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - api
  api:
    container_name: api
    build:
      context: ./api
      target: development
    environment:
      DB_HOST: api-database
      DB_PORT: ${API_DB_PORT}
      DB_PASSWORD: ${API_DB_PASSWORD}
      DB_USERNAME: ${API_DB_USERNAME}
      DB_DATABASE_NAME: ${API_DB_DATABASE_NAME}
      EBAY_API_URL: ebay-api
      EBAY_API_PORT: ${EBAY_API_SERVER_PORT}
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${API_SERVER_PORT}:${API_SERVER_PORT}
      - 9228:9229
    # command: npm run start:dev
    command: npm run start:debugdocker
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - api-database
  api-database:
    container_name: api-database
    image: postgres:12
    networks:
      - webnet
    environment:
      POSTGRES_PASSWORD: ${API_DB_PASSWORD}
      POSTGRES_USER: ${API_DB_USERNAME}
      POSTGRES_DB: ${API_DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - ${API_DB_PORT}:5432
    volumes:
      - pgapidata:/var/lib/postgresql/data
  pgadmin:
    container_name:  pgadmin
    image: dpage/pgadmin4
    environment: 
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USERNAME}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 50
    networks: 
      - webnet
    depends_on:
      - api-database
      - ebay-database
    ports:
      - ${PG_ADMIN_SERVER_PORT}:80
  ebay-api:
    container_name: ebay-api
    build:
      context: ./ebay-api
      target: development
    environment:
      DB_HOST: ebay-database
      DB_PORT: ${EBAY_DB_PORT}
      DB_PASSWORD: ${EBAY_DB_PASSWORD}
      DB_USERNAME: ${EBAY_DB_USERNAME}
      DB_DATABASE_NAME: ${EBAY_DB_DATABASE_NAME}
    volumes:
      - ./ebay-api:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${EBAY_API_SERVER_PORT}:${EBAY_API_SERVER_PORT}
      - 9229:9229
    # command: npm run start:dev
    command: npm run start:debugdocker
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - ebay-api-seeder
  ebay-api-seeder:
    container_name: ebay-api-seeder
    build:
      context: ./ebay-api
      target: development
    environment:
      DB_HOST: ebay-database
      DB_PORT: ${EBAY_DB_PORT}
      DB_PASSWORD: ${EBAY_DB_PASSWORD}
      DB_USERNAME: ${EBAY_DB_USERNAME}
      DB_DATABASE_NAME: ${EBAY_DB_DATABASE_NAME}
    volumes:
      - ./ebay-api:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${EBAY_API_SEEDER_PORT}:${EBAY_API_SEEDER_PORT}
      # - 9229:9229
    command: npm run seed
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - ebay-api-migration      
  ebay-api-migration:
    container_name: ebay-api-migration
    build:
      context: ./ebay-api
      target: development
    environment:
      DB_HOST: ebay-database
      DB_PORT: ${EBAY_DB_PORT}
      DB_PASSWORD: ${EBAY_DB_PASSWORD}
      DB_USERNAME: ${EBAY_DB_USERNAME}
      DB_DATABASE_NAME: ${EBAY_DB_DATABASE_NAME}
    volumes:
      - ./ebay-api:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${EBAY_API_MIGRATION_PORT}:${EBAY_API_MIGRATION_PORT}
    command: npm run typeorm:run
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - ebay-database
  ebay-database:
    container_name: ebay-database
    image: postgres:12
    networks:
      - webnet
    environment:
      POSTGRES_PASSWORD: ${EBAY_DB_PASSWORD}
      POSTGRES_USER: ${EBAY_DB_USERNAME}
      POSTGRES_DB: ${EBAY_DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - ${EBAY_DB_PORT}:5432
    volumes:
      - pgebaydata:/var/lib/postgresql/data
  gcd-info-mysql:
    container_name: gcd-info-mysql
    image: mysql:5.7
    networks:
      - webnet
    environment:
      MYSQL_PASSWORD: ${GCD_DB_PASSWORD}
      MYSQL_USER: ${GCD_DB_USERNAME}
      MYSQL_DATABASE: ${GCD_DB_DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${GCD_DB_ROOT}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - ${GCD_DB_PORT}:3306
    volumes:
      - mysqlgcddata:/var/lib/postgresql/data
      - ./gcdb:/docker-entrypoint-initdb.d/
  gcd-api:
    container_name: gcd-api
    build:
      context: ./gcd-api
      target: development
    environment:
      DB_HOST: gcd-info-mysql
      DB_PORT: ${GCD_DB_PORT}
      DB_PASSWORD: ${GCD_DB_PASSWORD}
      DB_USERNAME: ${GCD_DB_USERNAME}
      DB_DATABASE_NAME: ${GCD_DB_DATABASE_NAME}
      API_URL: api
      API_PORT: ${API_SERVER_PORT}
    volumes:
      - ./gcd-api:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${GCD_API_SERVER_PORT}:${GCD_API_SERVER_PORT}
      - 9227:9229
    # command: npm run start:dev
    command: npm run start:debugdocker
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - gcd-info-mysql

networks:
  webnet:
volumes:
  pgapidata:
  pgebaydata:
  mysqlgcddata:
